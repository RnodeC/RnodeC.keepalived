---
- name: Fail if keepalived_vip is not defined
  ansible.builtin.fail:
    msg: "The variable 'keepalived_vip' is not defined"
  when: keepalived_vip is not defined

- name: Generate keepalived_password on the first host in play_hosts
  ansible.builtin.set_fact:
    keepalived_password: "{{ lookup('community.general.random_string', length=8, special=false) }}"
  when: keepalived_password is not defined
  delegate_to: "{{ play_hosts[0] }}"
  run_once: true

- name: Set keepalived_password for all nodes in the play
  ansible.builtin.set_fact:
    keepalived_password: "{{ hostvars[play_hosts[0]].keepalived_password }}"
  when: keepalived_password is not defined

- debug: var=keepalived_password
  when: debug | default(false) | bool

- block:
  - name: Display ansible_interfaces for debugging
    debug:
      var: ansible_interfaces
    when: debug | default(false) | bool

  - name: Display non_loopback_interfaces for debugging
    debug:
      var: non_loopback_interfaces
    when: debug | default(false) | bool

  - name: Display extracted interfaces for debugging
    debug:
      var: ansible_interfaces | map('extract', ansible_facts) | list
    when: debug | default(false) | bool

  - name: Find primary network interface
    set_fact:
      primary_interface: "{{ non_loopback_interfaces.0.device }}"
    vars:
      non_loopback_interfaces: "{{ ansible_interfaces | map('extract', ansible_facts) | selectattr('ipv4', 'defined') | selectattr('type', 'ne', 'loopback') | list }}"
  - debug: var=primary_interface

  - name: Default keepalived_iface to primary_interface if not provided
    ansible.builtin.set_fact:
      keepalived_iface: "{{ primary_interface }}"
  when: keepalived_iface is not defined

- block:
  - name: Update apt cache 
    apt:
      update_cache: true
      cache_valid_time: 3600
    when: ansible_os_family == 'Debian'
    
  - name: Install keepalived
    ansible.builtin.package:
      name: keepalived
      state: "{{ 'latest' if keepalived_action == 'upgrade' else 'present' }}"
    notify: restart keepalived

  - debug:
      msg: "keepalived_iface = {{ keepalived_iface }}{{ '\n' }}keepalived_vip = {{ keepalived_vip }}"
    when: debug | default(false) | bool

  - name: Load keepalived.conf
    ansible.builtin.template:
      src: keepalived.conf.j2
      dest: /etc/keepalived/keepalived.conf
      owner: root
      group: root
      mode: 0644
    notify: restart keepalived

  - name: Update /etc/hosts
    ansible.builtin.lineinfile:
      path: /etc/hosts
      regexp: "^{{ keepalived_vip }} {{ keepalived_fqdn }}"
      line: "{{ keepalived_vip }} {{ keepalived_fqdn }}"
      state: present
    when: 
    - keepalived_fqdn is defined 
  become: true

- block:
  - name: Include check_rke2.sh script
    ansible.builtin.copy: 
      src: check_rke2.sh
      dest: /etc/keepalived/check_rke2.sh
      owner: root
      group: root
      mode: 0700
  become: true
  when: keepalived_rke2_enabled

# run restart keepalived now
- meta: flush_handlers 
